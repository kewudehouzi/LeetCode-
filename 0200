class Solution {
public:
    void dfs(vector<vector<char>>& grid,int i,int j){
        int m=grid.size(),n=grid[0].size();
        int x[4]={1,-1,0,0},y[4]={0,0,1,-1};
        if(i<0||i>=m||j<0||j>=n) return;
        if(grid[i][j]=='0') return;
        if(grid[i][j]=='1') grid[i][j]='0';
        for(int k=0;k<4;k++){
            dfs(grid,i+x[k],j+y[k]);
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int m=grid.size();;
        if(m==0) return 0;
        int n=grid[0].size();
        if(n==0) return 0;
        int cnt=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1'){
                    cnt++;
                    dfs(grid,i,j);
                }
            }
        }
        return cnt;
    }
};
