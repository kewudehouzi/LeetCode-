class Solution {
public:
    int dfs(int index,vector<int> num){
        if(index==num.size()) return 1;
        if(num[index]==1) {
            if(index==num.size()-1) return 1;
            else
                return dfs(index+1,num)+dfs(index+2,num);
        }
        else if(num[index]==2){
            if(index==num.size()-1) return 1;//若为最后一位，直接返回
            else{
                if(num[index+1]<=5)
                    return dfs(index+1,num)+dfs(index+2,num);
                else
                    return dfs(index+1,num);
            }
        }
        else{
            return dfs(index+1,num);
        }
    }
    int translateNum(int num) {
        if(num==0) return 1;
        vector<int> a;
        while(num>0){
            int t=num%10;
            a.push_back(t);
            num=num/10;
        }
        reverse(a.begin(),a.end());
        return dfs(0,a);
    }
};
