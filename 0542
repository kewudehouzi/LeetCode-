class Solution {
public:
    struct node{
        int i,j;
    };
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int m,n;
        int x[4]={1,-1,0,0},y[4]={0,0,1,-1};
        queue<node> q;
        m=matrix.size();n=matrix[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j]==1)
                    matrix[i][j]=-1;
                else{
                    node t;
                    t.i=i;t.j=j;
                    q.push(t);//把为0的点入队，在bfs中以0为中心向外扩散
                }
            }
        }
        while(!q.empty()){
            node now=q.front();
            q.pop();
            for(int i=0;i<4;i++){
                int ni=now.i+x[i],nj=now.j+y[i];
                if(ni>=0&&ni<m&&nj>=0&&nj<n&&matrix[ni][nj]==-1){//把0直接相邻的点距离设为1，并且入队，等待第二轮扩散
                    matrix[ni][nj]=matrix[now.i][now.j]+1;
                    node t;t.i=ni;t.j=nj;
                    q.push(t);
                }
            }
        }
        return matrix;
    }
};
